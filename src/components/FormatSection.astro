---
import { Image } from 'astro:assets'
import DeckCard from './DeckCard/DeckCard.astro'
import ActionButton from './ActionButton.astro'
import { Icon } from 'astro-icon/components'

interface Deck {
  title: string
  imageUrl: string
  linkUrl: string
}

interface Props {
  id: string
  title: string
  decks: Deck[]
  image: string
  banlist: string
  cardPool: string
  isCollapsed?: boolean
}

const { id, title, decks, image, banlist, cardPool, isCollapsed = false } = Astro.props
---

<div id={id} class="pt-4" x-data=`{ open: ${!isCollapsed} }`>
  <div
    class="bg-surface p-4 rounded-lg shadow-lg flex items-center justify-between mb-4 cursor-pointer"
    @click="open = !open"
  >
    <div class="flex items-center">
      <Image src={`/images/formats/${image}`} alt={title} width={32} height={32} class="w-8 h-8 mr-4 rounded-md" />
      <h2 class="text-2xl font-bold">{title}</h2>
      <span class="ml-4 bg-background text-text-secondary text-xs font-semibold mr-2 px-2.5 py-0.5 rounded-full"
        >{decks.length}</span
      >
    </div>
    <div class="flex items-center gap-x-4">
      {
        cardPool && (
          <ActionButton href={cardPool} tooltip="View Card Pool" ariaLabel="View Card Pool" class="p-1" x-on:click.stop>
            <Icon name="mdi:search" class="w-6 h-6 text-text-secondary" title="View Card Pool" />
          </ActionButton>
        )
      }
      {
        banlist && (
          <ActionButton href={banlist} tooltip="View Banlist" ariaLabel="View Banlist" class="p-1" x-on:click.stop>
            <Icon name="mdi:do-not-disturb-alt" class="w-6 h-6 text-text-secondary" title="View Banlist" />
          </ActionButton>
        )
      }
      <Icon
        name="mdi:chevron-down"
        title="Toggle Section"
        class="w-7 h-7 transform transition-transform duration-300 text-text-secondary filter"
        :class="{ 'rotate-180': open }"
      />
    </div>
  </div>

  <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4 mb-8" x-show="open" x-transition>
    {decks.map((deck) => <DeckCard title={deck.title} imageUrl={deck.imageUrl} linkUrl={deck.linkUrl} />)}
  </div>
</div>
